{
        "DSU Template ":
	{
		"prefix": "DSU",
		"body": [
			"struct DSU",
			"{",
			"\tvector < int > par, sz;",
			"\tDSU(int start)",
			"\t{",
			"\t\tconstexpr int N = 1e6 + 5;",
			"\t\tpar = sz = vector < int > (N);",
			"\t\tfor(int i = start; i < N; i++)",
			"\t\t\tpar[i] = i, sz[i] = 1;",
			"\t}",
			"\tDSU(int N, int start)",
			"\t{",
			"\t\tN += 5;",
			"\t\tpar = sz = vector < int > (N);",
			"\t\tfor(int i = start; i < N; i++)",
			"\t\t\tsz[i] = 1, par[i] = i;",
			"\t}",
			"\tint findParent(int node)",
			"\t{",
			"\t\tif(par[node] == node)",
			"\t\t\treturn node;",
			"\t\telse",
			"\t\t\treturn par[node] = findParent(par[node]);",
			"\t}",
			"\tbool join(int a, int b)",
			"\t{",
			"\t\tint la = findParent(a);",
			"\t\tint lb = findParent(b);",
			"\t\tif(la == lb)    ",
			"\t\t\treturn 0;",
			"\t\tif(sz[la] < sz[lb])",
			"\t\t\tswap(la, lb);",
			"\t\tsz[la] += sz[lb], par[lb] = la;",
			"\t\treturn 1;",
			"\t}",
			"\tbool sameGroup(int a, int b)",
			"\t{",
			"\t\treturn findParent(a) == findParent(b);  ",
			"\t}",
			"\tint groupSize(int node)",
			"\t{",
			"\t\treturn sz[findParent(node)];",
			"\t}",
			"};"
		],
		"description": "Print DSU Template"
	}
}
